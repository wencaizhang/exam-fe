(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{158:function(t,a,s){"use strict";s.r(a);var n=s(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"逻辑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑","aria-hidden":"true"}},[t._v("#")]),t._v(" 逻辑")]),t._v(" "),s("ol",[s("li",[t._v("当用户访问站点时，在路由拦截器里判断 "),s("code",[t._v("cookie")]),t._v(" 里面是否有 username 或者 token 或者 sessionId 之类的标识，如果有：表示“已登陆”，否则跳转到登陆页面；")]),t._v(" "),s("li",[t._v('如果已登陆，跳转到相应路由，对应页面调用 api 获取数据，否则提示"未登陆"，跳转到登陆页；')]),t._v(" "),s("li",[t._v("正常登陆，保存用户信息到 "),s("code",[t._v("cookie")])])]),t._v(" "),s("h2",{attrs:{id:"储存用户信息方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#储存用户信息方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 储存用户信息方案")]),t._v(" "),s("p",[t._v("同时使用 "),s("code",[t._v("vuex")]),t._v(" 和 "),s("code",[t._v("localStorage")]),t._v(" 储存用户信息")]),t._v(" "),s("p",[t._v("最简单的做法就是本地没数据就登录，有数据就刷新，后台判断数据过期了就清除数据再登录。")]),t._v(" "),s("p",[t._v("本地储存用户信息是为了避免页面刷新导致数据丢失的问题，")]),t._v(" "),s("p",[t._v("为统一管理 app 状态，使用 "),s("code",[t._v("vuex")]),t._v(" 储存数据，另外，与在内存中的 "),s("code",[t._v("state")]),t._v(" 相比，怕是其他方式都是慢的。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("vuex")]),t._v(" 管理状态，但是页面刷新时，"),s("code",[t._v("state")]),t._v(" 中的信息就会清空，因此需要同时在本地存储用户信息")]),t._v(" "),s("h2",{attrs:{id:"关于本地储存方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于本地储存方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 关于本地储存方案")]),t._v(" "),s("p",[t._v("用户登录成功以后应该在本地保存一份用户数据，注意保存本地的方法有很多种，比如 "),s("code",[t._v("cookie")]),t._v(" 、"),s("code",[t._v("localStorage")]),t._v("、"),s("code",[t._v("indexedDB")]),t._v(" 等。")]),t._v(" "),s("p",[t._v("这里使用的是 "),s("code",[t._v("localStorage")]),t._v("，但是代码中并没有直接调用 "),s("code",[t._v("window.localStorage")]),t._v("，而是封装一个用户数据的读取函数，解除代码耦合，将来要改成其他存储方式比较简单：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("getUserinfo")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("setUserinfo")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以存到 "),s("code",[t._v("localStorage")]),t._v(" 里面，只是不能直接用 "),s("code",[t._v("window.localStorage")]),t._v(" 相关函数的原因如下：")]),t._v(" "),s("p",[t._v("假设一个情景，在前期我们要求把用户信息存储在 "),s("code",[t._v("localStorage")]),t._v(" 中，但是后期，我们又不想存在这里，我们希望存在 "),s("code",[t._v("cookie")]),t._v(" 甚至其它地方。")]),t._v(" "),s("p",[t._v("那么如果使用直接调用 "),s("code",[t._v("window.localStorage")]),t._v(" 的写法，需要替换项目中的所有 "),s("code",[t._v("localStorage")]),t._v(" 调用，所以这里提取出一层，即 "),s("code",[t._v("model")]),t._v(" 层，或者说是存储层。")]),t._v(" "),s("p",[t._v("这样我们就不需要修改所有项目中的 "),s("code",[t._v("localStorage")]),t._v(" 调用，只需要修改 "),s("code",[t._v("model")]),t._v(" 层中的 "),s("code",[t._v("localStorage")]),t._v(" 调用，将其改为 "),s("code",[t._v("cookie")]),t._v(" 或者其它形式。")]),t._v(" "),s("p",[t._v("这样保持我们调用方式不变："),s("code",[t._v("getUserinfo")]),t._v("，同时还减小工作量，降低误差。")]),t._v(" "),s("p",[t._v("在团队的分工合作中，负责这一层的团队成员直接从 "),s("code",[t._v("localStorage")]),t._v(" 切换成 "),s("code",[t._v("cookie")]),t._v(" 也不会对上层的团队成员造成影响。也就是我随意切换存储方式，不和任何人打招呼我自己也能完成，还不影响他们。")]),t._v(" "),s("p",[t._v("而且独立出来以后我可以针对这一部分直接做单元测试，对项目的维护也有很大帮助。")]),t._v(" "),s("h2",{attrs:{id:"每次页面跳转之前检测权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#每次页面跳转之前检测权限","aria-hidden":"true"}},[t._v("#")]),t._v(" 每次页面跳转之前检测权限")]),t._v(" "),s("p",[t._v("利用 vue-router 提供的守卫 "),s("code",[t._v("beforeEach")]),t._v("，在每次页面跳转之前检测当前用户权限，并进行处理。")]),t._v(" "),s("p",[s("code",[t._v("src/main.js")]),t._v(" 中")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("router"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userInfo "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" util"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("getUserinfo")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" isLogin "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" store"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("login"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" notCheckLogin "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" to"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("matched"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("some")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" record "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" record"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("notCheckLogin "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 未登录，且需要检测登录状态的路由")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("userInfo "),s("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("isLogin "),s("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("notCheckLogin"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'/login'")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("遇到这样一个问题，如图所示，代码无限循环执行：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/Awesome-FE/exam-system-fe/master/note/beforeEach.png",alt:"beforeEach"}})]),t._v(" "),s("p",[t._v("主要原因是判断条件不严谨，判断条件永远成立，导致死循环，这点需要注意。")]),t._v(" "),s("p",[t._v("https://segmentfault.com/q/1010000014983955")]),t._v(" "),s("p",[t._v("https://segmentfault.com/q/1010000012121359")]),t._v(" "),s("p",[t._v("https://segmentfault.com/q/1010000012065855")]),t._v(" "),s("h2",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),s("p",[t._v("理论上应该有一个接口用来更新用户状态，比如判断用户是否需要重新登录之类的，比如"),s("code",[t._v("api/refresh")]),t._v("， 所以逻辑应该是：")]),t._v(" "),s("p",[t._v("用户进入app，判断本地是否有用户信息。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("如果有，调用 "),s("code",[t._v("api/refresh")]),t._v("，判断是否需要重新登录。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("不需要（连续登录），将信息保存在 vuex 中，并进入首页，往后数据读取全部走 vuex。")])]),t._v(" "),s("li",[s("p",[t._v("需要（长时间未登录），删除本地用户信息并跳转到登录流程。")])])])]),t._v(" "),s("li",[s("p",[t._v("如果没有， 跳转到登录流程（以下是登录流程）。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("调用 "),s("code",[t._v("api/login")]),t._v(" 登录。")])]),t._v(" "),s("li",[s("p",[t._v("将保存到本地，并保存到 vuex 中，往后数据读取全部走 vuex。")])])])])])])}],!1,null,null,null);o.options.__file="01-用户登录状态管理.md";a.default=o.exports}}]);